//
//  APNExample.swift
//  FCMAPNExample
//
//  Created by Shane Whitehead on 21/11/18.
//  Copyright Â© 2018 KaiZen Enterprises. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class APNExample : NSObject {

    //// Drawing Methods

    @objc dynamic public class func drawBaseAppIcon(frame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50)) {
        //// General Declarations
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Color Declarations
        let color = UIColor(red: 0.405, green: 0.800, blue: 0.320, alpha: 1.000)
        let color2 = UIColor(red: 0.392, green: 0.392, blue: 0.392, alpha: 1.000)


        //// Subframes
        let surface1: CGRect = CGRect(x: frame.minX + fastFloor(frame.width * 0.00000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 1.00000 + 0.5) - fastFloor(frame.width * 0.00000 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5))


        //// surface1
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: surface1.minX + fastFloor(surface1.width * 0.00000 + 0.5), y: surface1.minY + fastFloor(surface1.height * 0.00000 + 0.5), width: fastFloor(surface1.width * 1.00000 + 0.5) - fastFloor(surface1.width * 0.00000 + 0.5), height: fastFloor(surface1.height * 1.00000 + 0.5) - fastFloor(surface1.height * 0.00000 + 0.5)))
        color2.setFill()
        rectanglePath.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: surface1.minX + 0.60000 * surface1.width, y: surface1.minY + 0.18500 * surface1.height))
        bezier3Path.addLine(to: CGPoint(x: surface1.minX + 0.40000 * surface1.width, y: surface1.minY + 0.18500 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.38529 * surface1.width, y: surface1.minY + 0.20294 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.39053 * surface1.width, y: surface1.minY + 0.18500 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.38343 * surface1.width, y: surface1.minY + 0.19366 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.44510 * surface1.width, y: surface1.minY + 0.50199 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.38529 * surface1.width, y: surface1.minY + 0.20294 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.44140 * surface1.width, y: surface1.minY + 0.48349 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.46000 * surface1.width, y: surface1.minY + 0.51500 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.44669 * surface1.width, y: surface1.minY + 0.50995 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.45285 * surface1.width, y: surface1.minY + 0.51500 * surface1.height))
        bezier3Path.addLine(to: CGPoint(x: surface1.minX + 0.54000 * surface1.width, y: surface1.minY + 0.51500 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.55471 * surface1.width, y: surface1.minY + 0.50294 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.54715 * surface1.width, y: surface1.minY + 0.51500 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.55331 * surface1.width, y: surface1.minY + 0.50995 * surface1.height))
        bezier3Path.addLine(to: CGPoint(x: surface1.minX + 0.61471 * surface1.width, y: surface1.minY + 0.20294 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.60000 * surface1.width, y: surface1.minY + 0.18500 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.61657 * surface1.width, y: surface1.minY + 0.19366 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.60947 * surface1.width, y: surface1.minY + 0.18500 * surface1.height))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: surface1.minX + 0.50000 * surface1.width, y: surface1.minY + 0.54000 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.42000 * surface1.width, y: surface1.minY + 0.62000 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.45582 * surface1.width, y: surface1.minY + 0.54000 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.42000 * surface1.width, y: surface1.minY + 0.57582 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.50000 * surface1.width, y: surface1.minY + 0.70000 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.42000 * surface1.width, y: surface1.minY + 0.66418 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.45582 * surface1.width, y: surface1.minY + 0.70000 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.58000 * surface1.width, y: surface1.minY + 0.62000 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.54418 * surface1.width, y: surface1.minY + 0.70000 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.58000 * surface1.width, y: surface1.minY + 0.66418 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.50000 * surface1.width, y: surface1.minY + 0.54000 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.58000 * surface1.width, y: surface1.minY + 0.57582 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.54418 * surface1.width, y: surface1.minY + 0.54000 * surface1.height))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: surface1.minX + 0.96000 * surface1.width, y: surface1.minY + 0.47984 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.50000 * surface1.width, y: surface1.minY + 0.87977 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.96000 * surface1.width, y: surface1.minY + 0.70219 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.75344 * surface1.width, y: surface1.minY + 0.87977 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.38555 * surface1.width, y: surface1.minY + 0.86633 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.46039 * surface1.width, y: surface1.minY + 0.87977 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.42242 * surface1.width, y: surface1.minY + 0.87500 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.17898 * surface1.width, y: surface1.minY + 0.96000 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.37445 * surface1.width, y: surface1.minY + 0.87930 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.30281 * surface1.width, y: surface1.minY + 0.96000 * surface1.height))
        bezier3Path.addLine(to: CGPoint(x: surface1.minX + 0.14328 * surface1.width, y: surface1.minY + 0.96000 * surface1.height))
        bezier3Path.addLine(to: CGPoint(x: surface1.minX + 0.16375 * surface1.width, y: surface1.minY + 0.93070 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.21367 * surface1.width, y: surface1.minY + 0.82688 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.19250 * surface1.width, y: surface1.minY + 0.88945 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.20672 * surface1.width, y: surface1.minY + 0.85289 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.21922 * surface1.width, y: surface1.minY + 0.79461 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.21937 * surface1.width, y: surface1.minY + 0.80594 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.21906 * surface1.width, y: surface1.minY + 0.79891 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.04000 * surface1.width, y: surface1.minY + 0.47984 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.11063 * surface1.width, y: surface1.minY + 0.72125 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.04000 * surface1.width, y: surface1.minY + 0.60891 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.50000 * surface1.width, y: surface1.minY + 0.08000 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.04000 * surface1.width, y: surface1.minY + 0.25758 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.24656 * surface1.width, y: surface1.minY + 0.08000 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.96000 * surface1.width, y: surface1.minY + 0.47984 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.75344 * surface1.width, y: surface1.minY + 0.08000 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.96000 * surface1.width, y: surface1.minY + 0.25758 * surface1.height))
        bezier3Path.close()
        color.setFill()
        bezier3Path.fill()
    }

    @objc dynamic public class func drawMessage(frame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50)) {
        //// General Declarations
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Color Declarations
        let color2 = UIColor(red: 0.392, green: 0.392, blue: 0.392, alpha: 1.000)


        //// Subframes
        let envelope: CGRect = CGRect(x: frame.minX + fastFloor(frame.width * 0.00000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.14000 + 0.5), width: fastFloor(frame.width * 1.00000 + 0.5) - fastFloor(frame.width * 0.00000 + 0.5), height: fastFloor(frame.height * 0.86000 + 0.5) - fastFloor(frame.height * 0.14000 + 0.5))


        //// Envelope
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: envelope.minX + 0.00000 * envelope.width, y: envelope.minY + 0.00000 * envelope.height))
        bezierPath.addLine(to: CGPoint(x: envelope.minX + 0.00000 * envelope.width, y: envelope.minY + 0.07726 * envelope.height))
        bezierPath.addCurve(to: CGPoint(x: envelope.minX + 0.43312 * envelope.width, y: envelope.minY + 0.60156 * envelope.height), controlPoint1: CGPoint(x: envelope.minX + 0.06023 * envelope.width, y: envelope.minY + 0.15007 * envelope.height), controlPoint2: CGPoint(x: envelope.minX + 0.40578 * envelope.width, y: envelope.minY + 0.56847 * envelope.height))
        bezierPath.addCurve(to: CGPoint(x: envelope.minX + 0.50000 * envelope.width, y: envelope.minY + 0.63889 * envelope.height), controlPoint1: CGPoint(x: envelope.minX + 0.46125 * envelope.width, y: envelope.minY + 0.63563 * envelope.height), controlPoint2: CGPoint(x: envelope.minX + 0.48930 * envelope.width, y: envelope.minY + 0.63889 * envelope.height))
        bezierPath.addCurve(to: CGPoint(x: envelope.minX + 0.56688 * envelope.width, y: envelope.minY + 0.60156 * envelope.height), controlPoint1: CGPoint(x: envelope.minX + 0.51070 * envelope.width, y: envelope.minY + 0.63889 * envelope.height), controlPoint2: CGPoint(x: envelope.minX + 0.53875 * envelope.width, y: envelope.minY + 0.63563 * envelope.height))
        bezierPath.addCurve(to: CGPoint(x: envelope.minX + 1.00000 * envelope.width, y: envelope.minY + 0.07726 * envelope.height), controlPoint1: CGPoint(x: envelope.minX + 0.59523 * envelope.width, y: envelope.minY + 0.56727 * envelope.height), controlPoint2: CGPoint(x: envelope.minX + 0.96094 * envelope.width, y: envelope.minY + 0.12446 * envelope.height))
        bezierPath.addLine(to: CGPoint(x: envelope.minX + 1.00000 * envelope.width, y: envelope.minY + 0.00000 * envelope.height))
        bezierPath.addLine(to: CGPoint(x: envelope.minX + 0.00000 * envelope.width, y: envelope.minY + 0.00000 * envelope.height))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: envelope.minX + 0.00000 * envelope.width, y: envelope.minY + 0.15104 * envelope.height))
        bezierPath.addLine(to: CGPoint(x: envelope.minX + 0.00000 * envelope.width, y: envelope.minY + 0.84809 * envelope.height))
        bezierPath.addLine(to: CGPoint(x: envelope.minX + 0.30250 * envelope.width, y: envelope.minY + 0.51649 * envelope.height))
        bezierPath.addCurve(to: CGPoint(x: envelope.minX + 0.00000 * envelope.width, y: envelope.minY + 0.15104 * envelope.height), controlPoint1: CGPoint(x: envelope.minX + 0.20445 * envelope.width, y: envelope.minY + 0.39800 * envelope.height), controlPoint2: CGPoint(x: envelope.minX + 0.06461 * envelope.width, y: envelope.minY + 0.22917 * envelope.height))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: envelope.minX + 1.00000 * envelope.width, y: envelope.minY + 0.15104 * envelope.height))
        bezierPath.addCurve(to: CGPoint(x: envelope.minX + 0.69750 * envelope.width, y: envelope.minY + 0.51649 * envelope.height), controlPoint1: CGPoint(x: envelope.minX + 0.93898 * envelope.width, y: envelope.minY + 0.22483 * envelope.height), controlPoint2: CGPoint(x: envelope.minX + 0.79695 * envelope.width, y: envelope.minY + 0.39627 * envelope.height))
        bezierPath.addLine(to: CGPoint(x: envelope.minX + 1.00000 * envelope.width, y: envelope.minY + 0.84722 * envelope.height))
        bezierPath.addLine(to: CGPoint(x: envelope.minX + 1.00000 * envelope.width, y: envelope.minY + 0.15104 * envelope.height))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: envelope.minX + 0.33313 * envelope.width, y: envelope.minY + 0.55382 * envelope.height))
        bezierPath.addLine(to: CGPoint(x: envelope.minX + 0.00000 * envelope.width, y: envelope.minY + 0.91840 * envelope.height))
        bezierPath.addLine(to: CGPoint(x: envelope.minX + 0.00000 * envelope.width, y: envelope.minY + 1.00000 * envelope.height))
        bezierPath.addLine(to: CGPoint(x: envelope.minX + 1.00000 * envelope.width, y: envelope.minY + 1.00000 * envelope.height))
        bezierPath.addLine(to: CGPoint(x: envelope.minX + 1.00000 * envelope.width, y: envelope.minY + 0.91753 * envelope.height))
        bezierPath.addLine(to: CGPoint(x: envelope.minX + 0.66687 * envelope.width, y: envelope.minY + 0.55382 * envelope.height))
        bezierPath.addCurve(to: CGPoint(x: envelope.minX + 0.59313 * envelope.width, y: envelope.minY + 0.64323 * envelope.height), controlPoint1: CGPoint(x: envelope.minX + 0.62813 * envelope.width, y: envelope.minY + 0.60069 * envelope.height), controlPoint2: CGPoint(x: envelope.minX + 0.60023 * envelope.width, y: envelope.minY + 0.63466 * envelope.height))
        bezierPath.addCurve(to: CGPoint(x: envelope.minX + 0.50000 * envelope.width, y: envelope.minY + 0.69444 * envelope.height), controlPoint1: CGPoint(x: envelope.minX + 0.55477 * envelope.width, y: envelope.minY + 0.68956 * envelope.height), controlPoint2: CGPoint(x: envelope.minX + 0.51516 * envelope.width, y: envelope.minY + 0.69444 * envelope.height))
        bezierPath.addCurve(to: CGPoint(x: envelope.minX + 0.40687 * envelope.width, y: envelope.minY + 0.64323 * envelope.height), controlPoint1: CGPoint(x: envelope.minX + 0.48484 * envelope.width, y: envelope.minY + 0.69444 * envelope.height), controlPoint2: CGPoint(x: envelope.minX + 0.44523 * envelope.width, y: envelope.minY + 0.68967 * envelope.height))
        bezierPath.addCurve(to: CGPoint(x: envelope.minX + 0.33313 * envelope.width, y: envelope.minY + 0.55382 * envelope.height), controlPoint1: CGPoint(x: envelope.minX + 0.39984 * envelope.width, y: envelope.minY + 0.63477 * envelope.height), controlPoint2: CGPoint(x: envelope.minX + 0.37195 * envelope.width, y: envelope.minY + 0.60080 * envelope.height))
        bezierPath.close()
        color2.setFill()
        bezierPath.fill()
    }

    @objc dynamic public class func drawLaunchScreen(frame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200)) {
        //// General Declarations
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Color Declarations
        let color = UIColor(red: 0.405, green: 0.800, blue: 0.320, alpha: 1.000)
        let color2 = UIColor(red: 0.392, green: 0.392, blue: 0.392, alpha: 1.000)


        //// Subframes
        let surface1: CGRect = CGRect(x: frame.minX + fastFloor(frame.width * 0.00000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 1.00000 + 0.5) - fastFloor(frame.width * 0.00000 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5))


        //// surface1
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: surface1.minX + fastFloor(surface1.width * 0.00000 + 0.5), y: surface1.minY + fastFloor(surface1.height * 0.00000 + 0.5), width: fastFloor(surface1.width * 1.00000 + 0.5) - fastFloor(surface1.width * 0.00000 + 0.5), height: fastFloor(surface1.height * 1.00000 + 0.5) - fastFloor(surface1.height * 0.00000 + 0.5)))
        color2.setFill()
        rectanglePath.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: surface1.minX + 0.60000 * surface1.width, y: surface1.minY + 0.18500 * surface1.height))
        bezier3Path.addLine(to: CGPoint(x: surface1.minX + 0.40000 * surface1.width, y: surface1.minY + 0.18500 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.38529 * surface1.width, y: surface1.minY + 0.20294 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.39053 * surface1.width, y: surface1.minY + 0.18500 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.38343 * surface1.width, y: surface1.minY + 0.19366 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.44510 * surface1.width, y: surface1.minY + 0.50199 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.38529 * surface1.width, y: surface1.minY + 0.20294 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.44140 * surface1.width, y: surface1.minY + 0.48349 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.46000 * surface1.width, y: surface1.minY + 0.51500 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.44669 * surface1.width, y: surface1.minY + 0.50995 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.45285 * surface1.width, y: surface1.minY + 0.51500 * surface1.height))
        bezier3Path.addLine(to: CGPoint(x: surface1.minX + 0.54000 * surface1.width, y: surface1.minY + 0.51500 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.55471 * surface1.width, y: surface1.minY + 0.50294 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.54715 * surface1.width, y: surface1.minY + 0.51500 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.55331 * surface1.width, y: surface1.minY + 0.50995 * surface1.height))
        bezier3Path.addLine(to: CGPoint(x: surface1.minX + 0.61471 * surface1.width, y: surface1.minY + 0.20294 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.60000 * surface1.width, y: surface1.minY + 0.18500 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.61657 * surface1.width, y: surface1.minY + 0.19366 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.60947 * surface1.width, y: surface1.minY + 0.18500 * surface1.height))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: surface1.minX + 0.50000 * surface1.width, y: surface1.minY + 0.54000 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.42000 * surface1.width, y: surface1.minY + 0.62000 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.45582 * surface1.width, y: surface1.minY + 0.54000 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.42000 * surface1.width, y: surface1.minY + 0.57582 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.50000 * surface1.width, y: surface1.minY + 0.70000 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.42000 * surface1.width, y: surface1.minY + 0.66418 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.45582 * surface1.width, y: surface1.minY + 0.70000 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.58000 * surface1.width, y: surface1.minY + 0.62000 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.54418 * surface1.width, y: surface1.minY + 0.70000 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.58000 * surface1.width, y: surface1.minY + 0.66418 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.50000 * surface1.width, y: surface1.minY + 0.54000 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.58000 * surface1.width, y: surface1.minY + 0.57582 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.54418 * surface1.width, y: surface1.minY + 0.54000 * surface1.height))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: surface1.minX + 0.96000 * surface1.width, y: surface1.minY + 0.47984 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.50000 * surface1.width, y: surface1.minY + 0.87977 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.96000 * surface1.width, y: surface1.minY + 0.70219 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.75344 * surface1.width, y: surface1.minY + 0.87977 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.38555 * surface1.width, y: surface1.minY + 0.86633 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.46039 * surface1.width, y: surface1.minY + 0.87977 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.42242 * surface1.width, y: surface1.minY + 0.87500 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.17898 * surface1.width, y: surface1.minY + 0.96000 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.37445 * surface1.width, y: surface1.minY + 0.87930 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.30281 * surface1.width, y: surface1.minY + 0.96000 * surface1.height))
        bezier3Path.addLine(to: CGPoint(x: surface1.minX + 0.14328 * surface1.width, y: surface1.minY + 0.96000 * surface1.height))
        bezier3Path.addLine(to: CGPoint(x: surface1.minX + 0.16375 * surface1.width, y: surface1.minY + 0.93070 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.21367 * surface1.width, y: surface1.minY + 0.82688 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.19250 * surface1.width, y: surface1.minY + 0.88945 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.20672 * surface1.width, y: surface1.minY + 0.85289 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.21922 * surface1.width, y: surface1.minY + 0.79461 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.21937 * surface1.width, y: surface1.minY + 0.80594 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.21906 * surface1.width, y: surface1.minY + 0.79891 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.04000 * surface1.width, y: surface1.minY + 0.47984 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.11063 * surface1.width, y: surface1.minY + 0.72125 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.04000 * surface1.width, y: surface1.minY + 0.60891 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.50000 * surface1.width, y: surface1.minY + 0.08000 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.04000 * surface1.width, y: surface1.minY + 0.25758 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.24656 * surface1.width, y: surface1.minY + 0.08000 * surface1.height))
        bezier3Path.addCurve(to: CGPoint(x: surface1.minX + 0.96000 * surface1.width, y: surface1.minY + 0.47984 * surface1.height), controlPoint1: CGPoint(x: surface1.minX + 0.75344 * surface1.width, y: surface1.minY + 0.08000 * surface1.height), controlPoint2: CGPoint(x: surface1.minX + 0.96000 * surface1.width, y: surface1.minY + 0.25758 * surface1.height))
        bezier3Path.close()
        color.setFill()
        bezier3Path.fill()
    }

    @objc dynamic public class func drawSettings(frame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50)) {
        //// General Declarations
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Color Declarations
        let color2 = UIColor(red: 0.392, green: 0.392, blue: 0.392, alpha: 1.000)


        //// Subframes
        let group: CGRect = CGRect(x: frame.minX + fastFloor(frame.width * 0.04004 + 0.5) + 0, y: frame.minY + fastFloor(frame.height * 0.04000 + 0.5), width: fastFloor(frame.width * 0.95996 - 0.5) - fastFloor(frame.width * 0.04004 + 0.5) + 1, height: fastFloor(frame.height * 0.96000 + 0.5) - fastFloor(frame.height * 0.04000 + 0.5))


        //// Group
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: group.minX + 0.98178 * group.width, y: group.minY + 0.41785 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.85329 * group.width, y: group.minY + 0.39685 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.82261 * group.width, y: group.minY + 0.32283 * group.height), controlPoint1: CGPoint(x: group.minX + 0.84577 * group.width, y: group.minY + 0.37107 * group.height), controlPoint2: CGPoint(x: group.minX + 0.83549 * group.width, y: group.minY + 0.34628 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.89762 * group.width, y: group.minY + 0.21593 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.89519 * group.width, y: group.minY + 0.18807 * group.height), controlPoint1: CGPoint(x: group.minX + 0.90369 * group.width, y: group.minY + 0.20730 * group.height), controlPoint2: CGPoint(x: group.minX + 0.90264 * group.width, y: group.minY + 0.19554 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.81064 * group.width, y: group.minY + 0.10357 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.78257 * group.width, y: group.minY + 0.10130 * group.height), controlPoint1: CGPoint(x: group.minX + 0.80309 * group.width, y: group.minY + 0.09604 * group.height), controlPoint2: CGPoint(x: group.minX + 0.79122 * group.width, y: group.minY + 0.09507 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.67728 * group.width, y: group.minY + 0.17698 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.60266 * group.width, y: group.minY + 0.14596 * group.height), controlPoint1: CGPoint(x: group.minX + 0.65360 * group.width, y: group.minY + 0.16389 * group.height), controlPoint2: CGPoint(x: group.minX + 0.62860 * group.width, y: group.minY + 0.15350 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.58025 * group.width, y: group.minY + 0.01800 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.55883 * group.width, y: group.minY + 0.00000 * group.height), controlPoint1: CGPoint(x: group.minX + 0.57842 * group.width, y: group.minY + 0.00761 * group.height), controlPoint2: CGPoint(x: group.minX + 0.56940 * group.width, y: group.minY + 0.00000 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.43926 * group.width, y: group.minY + 0.00000 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.41780 * group.width, y: group.minY + 0.01824 * group.height), controlPoint1: CGPoint(x: group.minX + 0.42860 * group.width, y: group.minY + 0.00000 * group.height), controlPoint2: CGPoint(x: group.minX + 0.41951 * group.width, y: group.minY + 0.00772 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.39701 * group.width, y: group.minY + 0.14550 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.32229 * group.width, y: group.minY + 0.17620 * group.height), controlPoint1: CGPoint(x: group.minX + 0.37092 * group.width, y: group.minY + 0.15300 * group.height), controlPoint2: CGPoint(x: group.minX + 0.34588 * group.width, y: group.minY + 0.16328 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.21728 * group.width, y: group.minY + 0.10120 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.18926 * group.width, y: group.minY + 0.10350 * group.height), controlPoint1: CGPoint(x: group.minX + 0.20861 * group.width, y: group.minY + 0.09500 * group.height), controlPoint2: CGPoint(x: group.minX + 0.19680 * group.width, y: group.minY + 0.09600 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.10475 * group.width, y: group.minY + 0.18800 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.10231 * group.width, y: group.minY + 0.21583 * group.height), controlPoint1: CGPoint(x: group.minX + 0.09729 * group.width, y: group.minY + 0.19546 * group.height), controlPoint2: CGPoint(x: group.minX + 0.09625 * group.width, y: group.minY + 0.20720 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.17621 * group.width, y: group.minY + 0.32154 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.14495 * group.width, y: group.minY + 0.39676 * group.height), controlPoint1: CGPoint(x: group.minX + 0.16306 * group.width, y: group.minY + 0.34535 * group.height), controlPoint2: CGPoint(x: group.minX + 0.15258 * group.width, y: group.minY + 0.37054 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.01818 * group.width, y: group.minY + 0.41787 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.00000 * group.width, y: group.minY + 0.43930 * group.height), controlPoint1: CGPoint(x: group.minX + 0.00770 * group.width, y: group.minY + 0.41961 * group.height), controlPoint2: CGPoint(x: group.minX + 0.00000 * group.width, y: group.minY + 0.42870 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.00000 * group.width, y: group.minY + 0.55887 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.01794 * group.width, y: group.minY + 0.58028 * group.height), controlPoint1: CGPoint(x: group.minX + 0.00000 * group.width, y: group.minY + 0.56941 * group.height), controlPoint2: CGPoint(x: group.minX + 0.00757 * group.width, y: group.minY + 0.57843 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.14471 * group.width, y: group.minY + 0.60276 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.17597 * group.width, y: group.minY + 0.67798 * group.height), controlPoint1: CGPoint(x: group.minX + 0.15230 * group.width, y: group.minY + 0.62891 * group.height), controlPoint2: CGPoint(x: group.minX + 0.16278 * group.width, y: group.minY + 0.65411 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.10116 * group.width, y: group.minY + 0.78261 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.10347 * group.width, y: group.minY + 0.81063 * group.height), controlPoint1: CGPoint(x: group.minX + 0.09499 * group.width, y: group.minY + 0.79124 * group.height), controlPoint2: CGPoint(x: group.minX + 0.09596 * group.width, y: group.minY + 0.80309 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.18799 * group.width, y: group.minY + 0.89522 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.21584 * group.width, y: group.minY + 0.89765 * group.height), controlPoint1: CGPoint(x: group.minX + 0.19545 * group.width, y: group.minY + 0.90267 * group.height), controlPoint2: CGPoint(x: group.minX + 0.20721 * group.width, y: group.minY + 0.90372 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.32172 * group.width, y: group.minY + 0.82350 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.39662 * group.width, y: group.minY + 0.85446 * group.height), controlPoint1: CGPoint(x: group.minX + 0.34549 * group.width, y: group.minY + 0.83657 * group.height), controlPoint2: CGPoint(x: group.minX + 0.37060 * group.width, y: group.minY + 0.84693 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.41784 * group.width, y: group.minY + 0.98187 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.43926 * group.width, y: group.minY + 1.00000 * group.height), controlPoint1: CGPoint(x: group.minX + 0.41956 * group.width, y: group.minY + 0.99233 * group.height), controlPoint2: CGPoint(x: group.minX + 0.42862 * group.width, y: group.minY + 1.00000 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.55883 * group.width, y: group.minY + 1.00000 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.58022 * group.width, y: group.minY + 0.98207 * group.height), controlPoint1: CGPoint(x: group.minX + 0.56938 * group.width, y: group.minY + 1.00000 * group.height), controlPoint2: CGPoint(x: group.minX + 0.57840 * group.width, y: group.minY + 0.99243 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.60294 * group.width, y: group.minY + 0.85402 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.67752 * group.width, y: group.minY + 0.82283 * group.height), controlPoint1: CGPoint(x: group.minX + 0.62901 * group.width, y: group.minY + 0.84635 * group.height), controlPoint2: CGPoint(x: group.minX + 0.65399 * group.width, y: group.minY + 0.83591 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.78416 * group.width, y: group.minY + 0.89763 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.81203 * group.width, y: group.minY + 0.89522 * group.height), controlPoint1: CGPoint(x: group.minX + 0.79281 * group.width, y: group.minY + 0.90374 * group.height), controlPoint2: CGPoint(x: group.minX + 0.80455 * group.width, y: group.minY + 0.90267 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.89656 * group.width, y: group.minY + 0.81063 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.89882 * group.width, y: group.minY + 0.78254 * group.height), controlPoint1: CGPoint(x: group.minX + 0.90408 * group.width, y: group.minY + 0.80309 * group.height), controlPoint2: CGPoint(x: group.minX + 0.90506 * group.width, y: group.minY + 0.79120 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.82277 * group.width, y: group.minY + 0.67696 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.85336 * group.width, y: group.minY + 0.60287 * group.height), controlPoint1: CGPoint(x: group.minX + 0.83566 * group.width, y: group.minY + 0.65348 * group.height), controlPoint2: CGPoint(x: group.minX + 0.84590 * group.width, y: group.minY + 0.62865 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.98202 * group.width, y: group.minY + 0.58028 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 1.00000 * group.width, y: group.minY + 0.55887 * group.height), controlPoint1: CGPoint(x: group.minX + 0.99243 * group.width, y: group.minY + 0.57846 * group.height), controlPoint2: CGPoint(x: group.minX + 1.00000 * group.width, y: group.minY + 0.56941 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 1.00000 * group.width, y: group.minY + 0.43930 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.98178 * group.width, y: group.minY + 0.41785 * group.height), controlPoint1: CGPoint(x: group.minX + 1.00002 * group.width, y: group.minY + 0.42865 * group.height), controlPoint2: CGPoint(x: group.minX + 0.99230 * group.width, y: group.minY + 0.41957 * group.height))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.65217 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.34781 * group.width, y: group.minY + 0.50000 * group.height), controlPoint1: CGPoint(x: group.minX + 0.41595 * group.width, y: group.minY + 0.65217 * group.height), controlPoint2: CGPoint(x: group.minX + 0.34781 * group.width, y: group.minY + 0.58404 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.34783 * group.height), controlPoint1: CGPoint(x: group.minX + 0.34781 * group.width, y: group.minY + 0.41596 * group.height), controlPoint2: CGPoint(x: group.minX + 0.41595 * group.width, y: group.minY + 0.34783 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.65219 * group.width, y: group.minY + 0.50000 * group.height), controlPoint1: CGPoint(x: group.minX + 0.58405 * group.width, y: group.minY + 0.34783 * group.height), controlPoint2: CGPoint(x: group.minX + 0.65219 * group.width, y: group.minY + 0.41596 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.65217 * group.height), controlPoint1: CGPoint(x: group.minX + 0.65219 * group.width, y: group.minY + 0.58404 * group.height), controlPoint2: CGPoint(x: group.minX + 0.58405 * group.width, y: group.minY + 0.65217 * group.height))
        bezierPath.close()
        color2.setFill()
        bezierPath.fill()
    }

    @objc dynamic public class func drawTrash(frame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50)) {
        //// General Declarations
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Color Declarations
        let color2 = UIColor(red: 0.392, green: 0.392, blue: 0.392, alpha: 1.000)


        //// Subframes
        let group: CGRect = CGRect(x: frame.minX + fastFloor(frame.width * 0.13972 - 0.49) + 0.99, y: frame.minY + fastFloor(frame.height * 0.04000 + 0.5), width: fastFloor(frame.width * 0.86028 + 0.49) - fastFloor(frame.width * 0.13972 - 0.49) - 0.97, height: fastFloor(frame.height * 0.96000 + 0.5) - fastFloor(frame.height * 0.04000 + 0.5))


        //// Group
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: group.minX + 0.38898 * group.width, y: group.minY + 0.00000 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.30571 * group.width, y: group.minY + 0.06522 * group.height), controlPoint1: CGPoint(x: group.minX + 0.34331 * group.width, y: group.minY + 0.00000 * group.height), controlPoint2: CGPoint(x: group.minX + 0.30571 * group.width, y: group.minY + 0.02945 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.30571 * group.width, y: group.minY + 0.10870 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.02815 * group.width, y: group.minY + 0.10870 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.02824 * group.width, y: group.minY + 0.10870 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.00000 * group.width, y: group.minY + 0.13006 * group.height), controlPoint1: CGPoint(x: group.minX + 0.01291 * group.width, y: group.minY + 0.10849 * group.height), controlPoint2: CGPoint(x: group.minX + 0.00027 * group.width, y: group.minY + 0.11805 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.02727 * group.width, y: group.minY + 0.15217 * group.height), controlPoint1: CGPoint(x: group.minX + -0.00026 * group.width, y: group.minY + 0.14206 * group.height), controlPoint2: CGPoint(x: group.minX + 0.01195 * group.width, y: group.minY + 0.15196 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.02824 * group.width, y: group.minY + 0.15217 * group.height), controlPoint1: CGPoint(x: group.minX + 0.02760 * group.width, y: group.minY + 0.15218 * group.height), controlPoint2: CGPoint(x: group.minX + 0.02792 * group.width, y: group.minY + 0.15218 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.05591 * group.width, y: group.minY + 0.15217 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.05591 * group.width, y: group.minY + 0.93478 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.13917 * group.width, y: group.minY + 1.00000 * group.height), controlPoint1: CGPoint(x: group.minX + 0.05591 * group.width, y: group.minY + 0.97074 * group.height), controlPoint2: CGPoint(x: group.minX + 0.09327 * group.width, y: group.minY + 1.00000 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.86083 * group.width, y: group.minY + 1.00000 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.94409 * group.width, y: group.minY + 0.93478 * group.height), controlPoint1: CGPoint(x: group.minX + 0.90673 * group.width, y: group.minY + 1.00000 * group.height), controlPoint2: CGPoint(x: group.minX + 0.94409 * group.width, y: group.minY + 0.97074 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.94409 * group.width, y: group.minY + 0.15217 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.97185 * group.width, y: group.minY + 0.15217 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.97176 * group.width, y: group.minY + 0.15217 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 1.00000 * group.width, y: group.minY + 0.13081 * group.height), controlPoint1: CGPoint(x: group.minX + 0.98709 * group.width, y: group.minY + 0.15238 * group.height), controlPoint2: CGPoint(x: group.minX + 0.99973 * group.width, y: group.minY + 0.14282 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.97273 * group.width, y: group.minY + 0.10870 * group.height), controlPoint1: CGPoint(x: group.minX + 1.00026 * group.width, y: group.minY + 0.11881 * group.height), controlPoint2: CGPoint(x: group.minX + 0.98805 * group.width, y: group.minY + 0.10891 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.97176 * group.width, y: group.minY + 0.10870 * group.height), controlPoint1: CGPoint(x: group.minX + 0.97240 * group.width, y: group.minY + 0.10869 * group.height), controlPoint2: CGPoint(x: group.minX + 0.97208 * group.width, y: group.minY + 0.10869 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.69429 * group.width, y: group.minY + 0.10870 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.69429 * group.width, y: group.minY + 0.06522 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.61102 * group.width, y: group.minY + 0.00000 * group.height), controlPoint1: CGPoint(x: group.minX + 0.69429 * group.width, y: group.minY + 0.02945 * group.height), controlPoint2: CGPoint(x: group.minX + 0.65669 * group.width, y: group.minY + 0.00000 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.38898 * group.width, y: group.minY + 0.00000 * group.height))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: group.minX + 0.38898 * group.width, y: group.minY + 0.04348 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.61102 * group.width, y: group.minY + 0.04348 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.63878 * group.width, y: group.minY + 0.06522 * group.height), controlPoint1: CGPoint(x: group.minX + 0.62642 * group.width, y: group.minY + 0.04348 * group.height), controlPoint2: CGPoint(x: group.minX + 0.63878 * group.width, y: group.minY + 0.05316 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.63878 * group.width, y: group.minY + 0.10870 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.36122 * group.width, y: group.minY + 0.10870 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.36122 * group.width, y: group.minY + 0.06522 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.38898 * group.width, y: group.minY + 0.04348 * group.height), controlPoint1: CGPoint(x: group.minX + 0.36122 * group.width, y: group.minY + 0.05316 * group.height), controlPoint2: CGPoint(x: group.minX + 0.37358 * group.width, y: group.minY + 0.04348 * group.height))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: group.minX + 0.33347 * group.width, y: group.minY + 0.26087 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.36122 * group.width, y: group.minY + 0.28261 * group.height), controlPoint1: CGPoint(x: group.minX + 0.34879 * group.width, y: group.minY + 0.26087 * group.height), controlPoint2: CGPoint(x: group.minX + 0.36122 * group.width, y: group.minY + 0.27061 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.36122 * group.width, y: group.minY + 0.82609 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.33347 * group.width, y: group.minY + 0.84783 * group.height), controlPoint1: CGPoint(x: group.minX + 0.36122 * group.width, y: group.minY + 0.83811 * group.height), controlPoint2: CGPoint(x: group.minX + 0.34879 * group.width, y: group.minY + 0.84783 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.30571 * group.width, y: group.minY + 0.82609 * group.height), controlPoint1: CGPoint(x: group.minX + 0.31814 * group.width, y: group.minY + 0.84783 * group.height), controlPoint2: CGPoint(x: group.minX + 0.30571 * group.width, y: group.minY + 0.83811 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.30571 * group.width, y: group.minY + 0.28261 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.33347 * group.width, y: group.minY + 0.26087 * group.height), controlPoint1: CGPoint(x: group.minX + 0.30571 * group.width, y: group.minY + 0.27061 * group.height), controlPoint2: CGPoint(x: group.minX + 0.31814 * group.width, y: group.minY + 0.26087 * group.height))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.26087 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.52776 * group.width, y: group.minY + 0.28261 * group.height), controlPoint1: CGPoint(x: group.minX + 0.51532 * group.width, y: group.minY + 0.26087 * group.height), controlPoint2: CGPoint(x: group.minX + 0.52776 * group.width, y: group.minY + 0.27061 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.52776 * group.width, y: group.minY + 0.82609 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.84783 * group.height), controlPoint1: CGPoint(x: group.minX + 0.52776 * group.width, y: group.minY + 0.83811 * group.height), controlPoint2: CGPoint(x: group.minX + 0.51532 * group.width, y: group.minY + 0.84783 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.47224 * group.width, y: group.minY + 0.82609 * group.height), controlPoint1: CGPoint(x: group.minX + 0.48468 * group.width, y: group.minY + 0.84783 * group.height), controlPoint2: CGPoint(x: group.minX + 0.47224 * group.width, y: group.minY + 0.83811 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.47224 * group.width, y: group.minY + 0.28261 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.26087 * group.height), controlPoint1: CGPoint(x: group.minX + 0.47224 * group.width, y: group.minY + 0.27061 * group.height), controlPoint2: CGPoint(x: group.minX + 0.48468 * group.width, y: group.minY + 0.26087 * group.height))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: group.minX + 0.66653 * group.width, y: group.minY + 0.26087 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.69429 * group.width, y: group.minY + 0.28261 * group.height), controlPoint1: CGPoint(x: group.minX + 0.68188 * group.width, y: group.minY + 0.26087 * group.height), controlPoint2: CGPoint(x: group.minX + 0.69429 * group.width, y: group.minY + 0.27061 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.69429 * group.width, y: group.minY + 0.82609 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.66653 * group.width, y: group.minY + 0.84783 * group.height), controlPoint1: CGPoint(x: group.minX + 0.69429 * group.width, y: group.minY + 0.83811 * group.height), controlPoint2: CGPoint(x: group.minX + 0.68188 * group.width, y: group.minY + 0.84783 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.63878 * group.width, y: group.minY + 0.82609 * group.height), controlPoint1: CGPoint(x: group.minX + 0.65119 * group.width, y: group.minY + 0.84783 * group.height), controlPoint2: CGPoint(x: group.minX + 0.63878 * group.width, y: group.minY + 0.83811 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.63878 * group.width, y: group.minY + 0.28261 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.66653 * group.width, y: group.minY + 0.26087 * group.height), controlPoint1: CGPoint(x: group.minX + 0.63878 * group.width, y: group.minY + 0.27061 * group.height), controlPoint2: CGPoint(x: group.minX + 0.65119 * group.width, y: group.minY + 0.26087 * group.height))
        bezierPath.close()
        color2.setFill()
        bezierPath.fill()
    }

    @objc dynamic public class func drawPadLock(frame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50)) {
        //// Color Declarations
        let color2 = UIColor(red: 0.392, green: 0.392, blue: 0.392, alpha: 1.000)

        //// surface1
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 25, y: frame.minY + 4))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 14, y: frame.minY + 15), controlPoint1: CGPoint(x: frame.minX + 18.94, y: frame.minY + 4), controlPoint2: CGPoint(x: frame.minX + 14, y: frame.minY + 8.94))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 14, y: frame.minY + 20.84))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 10, y: frame.minY + 31), controlPoint1: CGPoint(x: frame.minX + 11.53, y: frame.minY + 23.52), controlPoint2: CGPoint(x: frame.minX + 10, y: frame.minY + 27.08))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 25, y: frame.minY + 46), controlPoint1: CGPoint(x: frame.minX + 10, y: frame.minY + 39.27), controlPoint2: CGPoint(x: frame.minX + 16.73, y: frame.minY + 46))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 40, y: frame.minY + 31), controlPoint1: CGPoint(x: frame.minX + 33.27, y: frame.minY + 46), controlPoint2: CGPoint(x: frame.minX + 40, y: frame.minY + 39.27))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 36, y: frame.minY + 20.84), controlPoint1: CGPoint(x: frame.minX + 40, y: frame.minY + 27.08), controlPoint2: CGPoint(x: frame.minX + 38.47, y: frame.minY + 23.52))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 36, y: frame.minY + 15))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 25, y: frame.minY + 4), controlPoint1: CGPoint(x: frame.minX + 36, y: frame.minY + 8.94), controlPoint2: CGPoint(x: frame.minX + 31.06, y: frame.minY + 4))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: frame.minX + 25, y: frame.minY + 6))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 34, y: frame.minY + 15), controlPoint1: CGPoint(x: frame.minX + 29.98, y: frame.minY + 6), controlPoint2: CGPoint(x: frame.minX + 34, y: frame.minY + 10.02))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 34, y: frame.minY + 19.03))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 25, y: frame.minY + 16), controlPoint1: CGPoint(x: frame.minX + 31.49, y: frame.minY + 17.14), controlPoint2: CGPoint(x: frame.minX + 28.38, y: frame.minY + 16))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 16, y: frame.minY + 19.03), controlPoint1: CGPoint(x: frame.minX + 21.62, y: frame.minY + 16), controlPoint2: CGPoint(x: frame.minX + 18.51, y: frame.minY + 17.14))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 16, y: frame.minY + 15))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 25, y: frame.minY + 6), controlPoint1: CGPoint(x: frame.minX + 16, y: frame.minY + 10.02), controlPoint2: CGPoint(x: frame.minX + 20.02, y: frame.minY + 6))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: frame.minX + 25, y: frame.minY + 28))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 28, y: frame.minY + 31), controlPoint1: CGPoint(x: frame.minX + 26.66, y: frame.minY + 28), controlPoint2: CGPoint(x: frame.minX + 28, y: frame.minY + 29.34))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 26, y: frame.minY + 33.81), controlPoint1: CGPoint(x: frame.minX + 28, y: frame.minY + 32.3), controlPoint2: CGPoint(x: frame.minX + 27.16, y: frame.minY + 33.4))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 26, y: frame.minY + 36))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 25, y: frame.minY + 37), controlPoint1: CGPoint(x: frame.minX + 26, y: frame.minY + 36.55), controlPoint2: CGPoint(x: frame.minX + 25.55, y: frame.minY + 37))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 24, y: frame.minY + 36), controlPoint1: CGPoint(x: frame.minX + 24.45, y: frame.minY + 37), controlPoint2: CGPoint(x: frame.minX + 24, y: frame.minY + 36.55))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 24, y: frame.minY + 33.81))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 22, y: frame.minY + 31), controlPoint1: CGPoint(x: frame.minX + 22.84, y: frame.minY + 33.4), controlPoint2: CGPoint(x: frame.minX + 22, y: frame.minY + 32.3))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 25, y: frame.minY + 28), controlPoint1: CGPoint(x: frame.minX + 22, y: frame.minY + 29.34), controlPoint2: CGPoint(x: frame.minX + 23.34, y: frame.minY + 28))
        bezierPath.close()
        color2.setFill()
        bezierPath.fill()
    }

    //// Generated Images

    @objc dynamic public class func imageOfMessage(imageSize: CGSize = CGSize(width: 50, height: 50)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(imageSize, false, 0)
            APNExample.drawMessage(frame: CGRect(x: 0, y: 0, width: imageSize.width, height: imageSize.height))

        let imageOfMessage = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfMessage
    }

    @objc dynamic public class func imageOfSettings(imageSize: CGSize = CGSize(width: 50, height: 50)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(imageSize, false, 0)
            APNExample.drawSettings(frame: CGRect(x: 0, y: 0, width: imageSize.width, height: imageSize.height))

        let imageOfSettings = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfSettings
    }

    @objc dynamic public class func imageOfTrash(imageSize: CGSize = CGSize(width: 50, height: 50)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(imageSize, false, 0)
            APNExample.drawTrash(frame: CGRect(x: 0, y: 0, width: imageSize.width, height: imageSize.height))

        let imageOfTrash = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfTrash
    }

    @objc dynamic public class func imageOfPadLock(imageSize: CGSize = CGSize(width: 50, height: 50)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(imageSize, false, 0)
            APNExample.drawPadLock(frame: CGRect(x: 0, y: 0, width: imageSize.width, height: imageSize.height))

        let imageOfPadLock = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfPadLock
    }

}
